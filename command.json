{
  "create": { "file": { "name": "N" }, "folder": { "name": "N" } },
  "wails": {
    "build": "N",
    "dev": "N",
    "init": {
      "-n": {
        "nameProject": {
          "-t": {
            "react": "N",
            "https://github.com/LGiki/wails-template-nextjs": "N"
          }
        }
      }
    }
  },
  "exit": "N",
  "go": {
    "mod": { "init": { "example": "N" } },
    "run": "N",
    "build": "N",
    "get": "N"
  },
  "ls": { "a": "N" },

  "python": "N",
  "pyinstaller": "N",
  "cd": "N",
  "npx": {
    "create-react-app": { "my-app": "N" },
    "create-next-app": { "my-app": "N" }
  },
  "pip": { "install": "N", "freeze": "N" },

  "mkdir": "N",
  "rmdir": { "/s /q": "N" },

  "echo '' > ": "N",
  "npm": {
    "run": { "start": "N", "build": "N", "dev": "N" },
    "install": {
      "sass": "N",
      "react-content-loader": "N",
      "@material-ui/core": "N",
      "react-lazy-load-image-component": "N",
      "@material-ui/icons": "N",
      "framer-motion": "N",
      "react-router-dom": "N",
      "react-router-dom@5": "N",
      "@reduxjs/toolkit": { "react-redux": { "redux": "N" } },
      "--legacy-peer-deps": {
        "sass": "N",
        "react-content-loader": "N",
        "@material-ui/core": "N",
        "@material-ui/icons": "N",
        "react-lazy-load-image-component": "N",
        "framer-motion": "N",
        "react-router-dom": "N",
        "react-router-dom@5": "N",
        "@reduxjs/toolkit": { "react-redux": { "redux": "N" } }
      },
      "--force": {
        "sass": "N",
        "react-content-loader": "N",
        "@material-ui/core": "N",
        "@material-ui/icons": "N",
        "react-lazy-load-image-component": "N",
        "framer-motion": "N",
        "react-router-dom": "N",
        "react-router-dom@5": "N",
        "@reduxjs/toolkit": { "react-redux": { "redux": "N" } }
      }
    }
  },
  "git": {
    "clone [Clone a repository into a new directory]": "N",
    "init [Create an empty Git repository or reinitialize an existing one]": "N",
    "add [Add file contents to the index]": { ".": "N" },
    "mv [Move or rename a file, a directory, or a symlink]": "N",
    "rm [Remove files from the working tree and from the index]": "N",
    "restore [Restore working tree files]": "N",
    "bisect [Use binary search to find the commit that introduced a bug]": "N",
    "diff [Show changes between commits, commit and working tree, etc]": "N",
    "grep [Print lines matching a pattern]": "N",
    "log [Show commit logs]": "N",
    "show [Show various types of objects]": "N",
    "rebase [Reapply commits on top of another base tip]": "N",
    "reset [Reset current HEAD to the specified state]": "N",
    "switch [Switch branches]": "N",
    "tag [Create, list, delete or verify a tag object signed with GPG]": "N",
    "": "N",
    "commit [Record changes to the repository]": {
      "-m [commit message]": { "\"commitMassage\"": "N" },
      "-q [suppress summary after successful commit]": "N",
      "-v [show diff in commit message template]": "N",
      "-F [read message from file]": "N",
      "--author [override author for commit]": "N",
      "--date [override date for commit]": "N",
      "-c [reuse and edit message from specified commit]": "N",
      "-C [reuse message from specified commit]": "N",
      "--fixup [use autosquash formatted message to fixup or amend/reword specified commit]": "N",
      "--squash [use autosquash formatted message to squash specified commit]": "N",
      "--reset-author [the commit is authored by me now (used with -C/-c/--amend)]": "N",
      "--trailer [add custom trailer(s)]": "N",
      "-s [add a Signed-off-by trailer]": "N",
      "-t [use specified template file]": "N",
      "-e [force edit of commit]": "N",
      "--cleanup [how to strip spaces and #comments from message]": "N",
      "--status [include status in commit message template]": "N",
      "-S [GPG sign commit]": "N",
      "-a [commit all changed files]": "N",
      "-i [add specified files to index for commit]": "N",
      "--interactive [interactively add files]": "N",
      "-p [interactively add changes]": "N",
      "-o [commit only specified files]": "N",
      "-n [bypass pre-commit and commit-msg hooks]": "N",
      "--dry-run [show what would be committed]": "N",
      "--short [show status concisely]": "N",
      "--branch [show branch information]": "N",
      "--ahead-behind [compute full ahead/behind values]": "N",
      "--porcelain [machine-readable output]": "N",
      "--long [show status in long format (default)]": "N",
      "-z [terminate entries with NUL]": "N",
      "--amend [amend previous commit]": "N",
      "--no-post-rewrite [bypass post-rewrite hook]": "N",
      "-u [show untracked files, optional modes: all, normal, no. (Default: all)]": "N",
      "--pathspec-from-file [read pathspec from file]": "N",
      "--pathspec-file-nul [with --pathspec-from-file, pathspec elements are separated with NUL character]": "N"
    },
    "status [Show the working tree status]": "N",
    "branch [List, create, or delete branches]": "git_branch",
    "branch [List, create, or delete branches]_c_addon": {
      "-d": "N",
      "-D": "N",
      "-a": "N",
      "-m": "N",
      "c_all": "git_branch"
    },
    "push [Update remote refs along with associated objects]": "git_remote",
    "push [Update remote refs along with associated objects]_c_addon": {
      "c_all": "git_branch",
      "c_all_c_addon": { "--delete": "N", "c_all": "git_branch" }
    },
    "pull [Fetch from and integrate with another repository or a local branch]": "git_remote",
    "pull [Fetch from and integrate with another repository or a local branch]_c_addon": {
      "c_all": "git_branch"
    },
    "checkout": "git_branch",
    "checkout_c_addon": {
      "-b [create and checkout a new branch]": "N",
      "-B [create/reset and checkout a branch]": "N",
      "-l [create reflog for new branch]": "N",
      "--guess [second guess 'git checkout <no-such-branch>']": "N",
      "--overlay [use overlay mode (default)]": "N",
      "-q [suppress progress reporting]": "N",
      "--recurse-submodules [control recursive updating of submodules]": "N",
      "--progress [force progress reporting]": "N",
      "-m [perform a 3-way merge with the new branch]": "N",
      "--conflict [conflict style (merge, diff3, or zdiff3)]": "N",
      "-d [detach HEAD at named commit]": "N",
      "-t [set branch tracking configuration]": "N",
      "-f [force checkout (throw away local modifications)]": "N",
      "--orphan [new unparented branch]": "N",
      "--overwrite-ignore [update ignored files (default)]": "N",
      "--ignore-other-worktrees [do not check if another worktree is holding the given ref]": "N",
      "-2 [checkout our version for unmerged files]": "N",
      "-3 [checkout their version for unmerged files]": "N",
      "-p [select hunks interactively]": "N",
      "--ignore-skip-worktree-bits [do not limit pathspecs to sparse entries only]": "N",
      "--pathspec-from-file [read pathspec from file]": "N",
      "--pathspec-file-nul [with --pathspec-from-file, pathspec elements are separated with NUL character]": "N",
      "--quiet [suppress progress reporting]": "N",
      "--merge [perform a 3-way merge with the new branch]": "N",
      "--detach [detach HEAD at named commit]": "N",
      "--track [set branch tracking configuration]": "N",
      "--force [force checkout (throw away local modifications)]": "N",
      "--ours [checkout our version for unmerged files]": "N",
      "--theirs [checkout their version for unmerged files]": "N",
      "--patch [select hunks interactively]": "N",
      "c_all": { "name_branch": "N" }
    },
    "revert": "N",
    "remote": {
      "add": "git_remote",
      "add_c_addon": { "c_all": "git_repos_url" },
      "set-url": "git_remote",
      "set-url_c_addon": { "c_all": "git_repos_url" },
      "-v": "N"
    },
    "config": {
      "--global": {
        "user.name": { "\"YourName\"": "N" },
        "user.email": { "\"youremail@example.com\"": "N" },
        "user.username": { "\"username\"": "N" }
      }
    },
    "diff": "N",
    "fetch [Download objects and refs from another repository]": {
      "--dry-run": "N"
    },
    "merge [Join two or more development histories together]": "git_branch",
    "--help": "N"
  },
  "add": "N",
  "ng": { "new": { "my-app": "N" }, "serve": { "--open": "N" } },
  "addf": "N"
}
